// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-arm64-openssl-1.0.x"]
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String?
  noHp      String
  gender    genderUser
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum genderUser {
  pria
  wanita
}

model Client {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String?
  noHp      String
  gender    genderUser
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Booking   Booking[]
}

model Pemilik {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String?
  noHp      String
  gender    genderUser
  balance   Int        @default(0)
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Kost      Kost[]
}

enum SupportedBank {
  mandiri
  bni
  bri
  bca
}

model Kost {
  id          Int           @id @default(autoincrement())
  namaKost    String
  description String        @default("")
  alamat      String
  latitude    String
  longitude   String
  GambarKost  GambarKost[]
  pembayaran  String
  bank        SupportedBank @default(bca)
  pemilikId   Int
  pemilik     Pemilik       @relation(fields: [pemilikId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Kamar       Kamar[]
}

model GambarKost {
  id        Int      @id @default(autoincrement())
  image     String
  kostId    Int
  kost      Kost     @relation(fields: [kostId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum genderKamar {
  pria
  wanita
  campur
}

model Kamar {
  id          Int           @id @default(autoincrement())
  namaKamar   String
  description String        @default("")
  harga       Int
  fasilitas   String        @default("")
  ukuran      String
  gender      genderKamar
  capacity    Int
  GambarKamar GambarKamar[]
  kostId      Int
  kost        Kost          @relation(fields: [kostId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Booking     Booking[]

  @@fulltext([namaKamar])
}

model GambarKamar {
  id        Int      @id @default(autoincrement())
  image     String
  kamarId   Int
  kamar     Kamar    @relation(fields: [kamarId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum BookingState {
  pending
  confirmed
  canceled
  done
}

model Booking {
  id        Int          @id @default(autoincrement())
  checkIn   DateTime
  checkOut  DateTime
  status    BookingState @default(pending)
  client    Client       @relation(fields: [clientId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  clientId  Int
  kamar     Kamar        @relation(fields: [kamarId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  kamarId   Int
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  Payment   Payment[]
}

model Payment {
  id        String    @id
  status    Boolean   @default(false)
  paidDate  DateTime?
  bookingId Int
  booking   Booking   @relation(fields: [bookingId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Articles {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@fulltext([title])
}
